// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @default(cuid())
  name        String
  email       String    @unique
  nameCompany String
  image       String?
  password    String
  canais      String[]
  accounts    Account[]
  products    Product[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Sale      Sale[]
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Product {
  id          Int     @id @default(autoincrement())
  userId      String  @map("user_id")
  nomeProduto String
  descricao   String?
  codigo      Int
  ean         String
  fabricante  String?
  custo       Float
  precoVenda  Float
  estoque     Int
  altura      String?
  largura     String?
  comprimento String?
  peso        String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Sale      Sale[]
}

model Sale {
  id                   Int    @id @default(autoincrement())
  userId               String
  productId            Int
  quantidade           Int
  canal                String
  valorTotalCusto      Float
  valorTotalVenda      Float
  valorTotalLucro      Float
  NF                   String
  status               String
  icms                 Float
  pis                  Float
  cofins               Float
  totalTriubutos       Float
  lucroTotalComImposto Float

  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
